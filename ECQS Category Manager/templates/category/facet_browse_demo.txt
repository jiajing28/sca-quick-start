<%
	var model = view.model
	,	catModel = view.catModel
	,	items = model.get('items')
	,	facets = model.get('facets')
	,	translator = view.translator
	,	displayName = catModel.custrecord_ecqs_category_displayname || catModel.name
	,	hasItemList =  typeof view.itemListModel.get('items') !== 'undefined'
	,	itemListItems = hasItemList ? view.itemListModel.get('items') : null
	,	subcategories = catModel.recmachcustrecord_ecqs_subcat_parent || null
	,	cellTemplate = catModel.custrecord_ecqs_category_tmpl_cell.name;
	
	console.log('VIEW', view);
%>
<div data-cms-area="item_list_banner" data-cms-area-filters="page_type"></div>
<div class="view-header" itemscope itemtype="http://schema.org/WebPage">
	<%= breadcrumb(view.getBreadcrumb()) %>
</div>
<div class="row-fluid view-body" itemscope itemtype="http://schema.org/ItemList">
	<nav class="span3">
		<div data-cms-area="facet_navigation_top" data-cms-area-filters="page_type"></div>
		<%= navSubcategories(view, subcategories) %>
		<% if (items) { %>
			<%= facetedNavigation(view) %>
		<% } %>
		<div data-cms-area="facet_navigation_bottom" data-cms-area-filters="page_type"></div>
	</nav>
	<div id="category-content-body" class="span9">
		<meta itemprop="name" content="<%- view.getTitle() %>">
		<h1><%= displayName %></h1>
		<div id="banner-section-top" class="content-banner banner-section-top" data-cms-area="item_list_banner_top" data-cms-area-filters="path"></div>
		<div id="ecqs-category-banner" class="content-banner banner-section-top">
			<%= catModel.custrecord_ecqs_category_banner %>
		</div>
		<% if (subcategories && subcategories.length) { %>
			<section id="category-list-container" class="category-list-container">
				<div class="row-fluid">
					<div class="span12">
						<% _.each(subcategories, function (subcategory) { %>
							<%= subcategoryCell(subcategory.custrecord_ecqs_subcat_child.internalid, view) %>
						<% }); %>
					</div>
				</div>
			</section>
		<% } %>
		<% if (catModel.custrecord_ecqs_category_merch_rule) { %>
			<h3>Merchandising Zone</h3>
			<div data-type="merchandising-zone" data-id="<%= catModel.custrecord_ecqs_category_merch_rule ? catModel.custrecord_ecqs_category_merch_rule.name : '' %>"></div>
		<% } %> 
		

		<!--<section id="item-list-container" class="item-list-container" data-type="custom-item-list"></section>-->

		
		<% if (SC.macros[cellTemplate] && hasItemList) { %>
			<h3>Item List</h3>
			<section id="item-list-container" class="item-list-container row-fluid">
				<%= SC.macros[cellTemplate](view, view.itemListModel) %>
			</section>
		<% } else if (view.catModel.itemIds) { %>
			<h3>Item List</h3>
			<section id="item-list-container" class="item-list-container row-fluid"></section>
		<% } %>
		
		<% if (items && items.length > 0) { %>
			<%
			// Some calls to macros so we have can reuse them
			var	facetsDisplayResults = SC.macros.facetsDisplay(translator)
		
			,	itemListSummaryResult = SC.macros.itemListSummary({
					totalItems: model.get('total')
				,	currentPage: translator.getOptionValue('page')
				,	itemsPerPage: translator.getOptionValue('show')
				})
		 
			,	paginationResult = SC.macros.pagination(_.extend({}, view.options.application.getConfig('defaultPaginationSettings'), {
					currentPage: translator.getOptionValue('page')
				,	totalPages: view.totalPages
				,	extraClass: 'pagination-small pull-right'
				,	pager: function (page) {
						return translator.cloneForOption('page', page).getUrl();
					}
				}))
		
			,	itemListDisplaySelectorResult = SC.macros.itemListDisplaySelector({
					translator: translator
				,	classes: 'pull-right'
				,	options: view.options.application.getConfig('itemsDisplayOptions')
				})
		
			,	itemListSortSelectorResult = SC.macros.itemListSortSelector({
					translator: translator
				,	options: view.options.application.getConfig('sortOptions')
				})
		
			,	itemListShowSelectorResult = SC.macros.itemListShowSelector({
					translator: translator
				,	options: view.options.application.getConfig('resultsPerPage')
				})
		
			,	page_header = _(view.page_header).substitute({
					itemscount: model.get('total')
				})
		
			,	collapse_header = view.collapsable_elements['facet-header'].collapsed;
			%>
			<h3>Facet Items</h3>
			<header>
				<div class="facet-header <%= collapse_header ? 'well' : 'facet-header-white-well' %> row-fluid control-group" data-type="accordion">
					<div class="header-row" data-action="accordion-header" >
						<div class="row-fluid">
							<div class="span12">
								<div class="header-expander">
									<a href="#" class="btn" data-action="toggle-filters">
										<%= _('Filter').translate() %> <i class="filter-icon icon-chevron-down" ></i>
									</a>
								</div>
								<%= itemListDisplaySelectorResult %>
							</div>
						</div>
					</div>
	
					<div data-type="accordion-body" <%= collapse_header ? '' : 'style="display: none;"' %>>
						<div class="row-fluid">
							<div class="span12">
	
								<!-- Sort By filter -->
								<%= itemListSortSelectorResult %>
								<!-- Sort By filter -->
								<%= itemListShowSelectorResult %>
	
								<% if (items.length && facets.length) { %>
									<!-- This button is only shown in mobile -->
									<button class="visible-tablet btn pull-left narrow-by-btn" data-toggle="facet-navigation">
										<span><%= _('Narrow By').translate() %></span>
										<i class="icon-chevron-right"></i>
									</button>
								<% } %>
							</div>
						</div>
					</div>
				</div>
	
				<div class="row-fluid">
					<% if (items.length && facets.length) { %>
						<!-- This button is only shown in mobile -->
						<button class="visible-phone btn narrow-by-btn" data-toggle="facet-navigation">
							<span><%= _('Narrow By').translate() %></span>
							<i class="icon-chevron-right"></i>
						</button>
					<% } %>
				</div>
	
				<div class="row-fluid">
					<%= paginationResult %>
				</div>
	
				<%= facetsDisplayResults %>
			</header>
			<!-- Item List -->
			<div id="item-list" class="item-list">
				<%
					var displayOption = _.find(view.options.application.getConfig('itemsDisplayOptions'), function (option)
						{
							return option.id === view.options.translator.getOptionValue('display');
						})
					,	cellWrap = function cellWrap (item)
						{
							return SC.macros[displayOption.macro](item, view);
						};
				%>
				<%= displayInRows(items.models, cellWrap, displayOption.columns) %>
				<div class="bottom-pagination">
					<%= paginationResult %>
				</div>
				<div class="clearfix"></div>
			</div>
			<!-- /Item List -->
		<% } %> 

	</div>
</div>

